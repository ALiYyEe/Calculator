C L "get_func" 0 15 1 "FUNCTION"
D G "__PCM__" 0 144 ""4.068""
D G "__DEVICE__" 0 144 "877"
D G "__DATE__" 0 144 ""08-mai-16""
D G "__TIME__" 0 144 ""13:33:14"" "Standard Header file for the PIC16F877A device ////////////////"
d G "PIN_A0" 2 19 "40"
d G "PIN_A1" 2 20 "41"
d G "PIN_A2" 2 21 "42"
d G "PIN_A3" 2 22 "43"
d G "PIN_A4" 2 23 "44"
d G "PIN_A5" 2 24 "45"
d G "PIN_B0" 2 26 "48"
d G "PIN_B1" 2 27 "49"
d G "PIN_B2" 2 28 "50"
d G "PIN_B3" 2 29 "51"
d G "PIN_B4" 2 30 "52"
d G "PIN_B5" 2 31 "53"
d G "PIN_B6" 2 32 "54"
d G "PIN_B7" 2 33 "55"
d G "PIN_C0" 2 35 "56"
d G "PIN_C1" 2 36 "57"
d G "PIN_C2" 2 37 "58"
d G "PIN_C3" 2 38 "59"
d G "PIN_C4" 2 39 "60"
d G "PIN_C5" 2 40 "61"
d G "PIN_C6" 2 41 "62"
d G "PIN_C7" 2 42 "63"
d G "PIN_D0" 2 44 "64"
d G "PIN_D1" 2 45 "65"
d G "PIN_D2" 2 46 "66"
d G "PIN_D3" 2 47 "67"
d G "PIN_D4" 2 48 "68"
d G "PIN_D5" 2 49 "69"
d G "PIN_D6" 2 50 "70"
d G "PIN_D7" 2 51 "71"
d G "PIN_E0" 2 53 "72"
d G "PIN_E1" 2 54 "73"
d G "PIN_E2" 2 55 "74"
d G "FALSE" 2 58 "0"
d G "TRUE" 2 59 "1"
d G "BYTE" 2 61 "int8"
d G "BOOLEAN" 2 62 "int1"
d G "getc" 2 64 "getch"
d G "fgetc" 2 65 "getch"
d G "getchar" 2 66 "getch"
d G "putc" 2 67 "putchar"
d G "fputc" 2 68 "putchar"
d G "fgets" 2 69 "gets"
d G "fputs" 2 70 "puts"
d G "WDT_FROM_SLEEP" 2 75 "3"
d G "WDT_TIMEOUT" 2 76 "11"
d G "MCLR_FROM_SLEEP" 2 77 "19"
d G "MCLR_FROM_RUN" 2 78 "27"
d G "NORMAL_POWER_UP" 2 79 "25"
d G "BROWNOUT_RESTART" 2 80 "26"
d G "RTCC_INTERNAL" 2 88 "0"
d G "RTCC_EXT_L_TO_H" 2 89 "32"
d G "RTCC_EXT_H_TO_L" 2 90 "48"
d G "RTCC_DIV_1" 2 92 "8"
d G "RTCC_DIV_2" 2 93 "0"
d G "RTCC_DIV_4" 2 94 "1"
d G "RTCC_DIV_8" 2 95 "2"
d G "RTCC_DIV_16" 2 96 "3"
d G "RTCC_DIV_32" 2 97 "4"
d G "RTCC_DIV_64" 2 98 "5"
d G "RTCC_DIV_128" 2 99 "6"
d G "RTCC_DIV_256" 2 100 "7"
d G "RTCC_8_BIT" 2 103 "0"
d G "WDT_18MS" 2 115 "0x8008"
d G "WDT_36MS" 2 116 "9"
d G "WDT_72MS" 2 117 "10"
d G "WDT_144MS" 2 118 "11"
d G "WDT_288MS" 2 119 "12"
d G "WDT_576MS" 2 120 "13"
d G "WDT_1152MS" 2 121 "14"
d G "WDT_2304MS" 2 122 "15"
d G "T1_DISABLED" 2 128 "0"
d G "T1_INTERNAL" 2 129 "0x85"
d G "T1_EXTERNAL" 2 130 "0x87"
d G "T1_EXTERNAL_SYNC" 2 131 "0x83"
d G "T1_CLK_OUT" 2 133 "8"
d G "T1_DIV_BY_1" 2 135 "0"
d G "T1_DIV_BY_2" 2 136 "0x10"
d G "T1_DIV_BY_4" 2 137 "0x20"
d G "T1_DIV_BY_8" 2 138 "0x30"
d G "T2_DISABLED" 2 143 "0"
d G "T2_DIV_BY_1" 2 144 "4"
d G "T2_DIV_BY_4" 2 145 "5"
d G "T2_DIV_BY_16" 2 146 "6"
d G "CCP_OFF" 2 152 "0"
d G "CCP_CAPTURE_FE" 2 153 "4"
d G "CCP_CAPTURE_RE" 2 154 "5"
d G "CCP_CAPTURE_DIV_4" 2 155 "6"
d G "CCP_CAPTURE_DIV_16" 2 156 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 2 157 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 2 158 "9"
d G "CCP_COMPARE_INT" 2 159 "0xA"
d G "CCP_COMPARE_RESET_TIMER" 2 160 "0xB"
d G "CCP_PWM" 2 161 "0xC"
d G "CCP_PWM_PLUS_1" 2 162 "0x1c"
d G "CCP_PWM_PLUS_2" 2 163 "0x2c"
d G "CCP_PWM_PLUS_3" 2 164 "0x3c"
v G "CCP_1" 2 165 "int16"
v G "CCP_2" 2 169 "int16"
d G "PSP_ENABLED" 2 178 "0x10"
d G "PSP_DISABLED" 2 179 "0"
d G "SPI_MASTER" 2 186 "0x20"
d G "SPI_SLAVE" 2 187 "0x24"
d G "SPI_L_TO_H" 2 188 "0"
d G "SPI_H_TO_L" 2 189 "0x10"
d G "SPI_CLK_DIV_4" 2 190 "0"
d G "SPI_CLK_DIV_16" 2 191 "1"
d G "SPI_CLK_DIV_64" 2 192 "2"
d G "SPI_CLK_T2" 2 193 "3"
d G "SPI_SS_DISABLED" 2 194 "1"
d G "SPI_SAMPLE_AT_END" 2 196 "0x8000"
d G "SPI_XMIT_L_TO_H" 2 197 "0x4000"
d G "UART_ADDRESS" 2 203 "2"
d G "UART_DATA" 2 204 "4"
d G "A0_A3_A1_A3" 2 208 "0xfff04"
d G "A0_A3_A1_A2_OUT_ON_A4_A5" 2 209 "0xfcf03"
d G "A0_A3_A1_A3_OUT_ON_A4_A5" 2 210 "0xbcf05"
d G "NC_NC_NC_NC" 2 211 "0x0ff07"
d G "A0_A3_A1_A2" 2 212 "0xfff02"
d G "A0_A3_NC_NC_OUT_ON_A4" 2 213 "0x9ef01"
d G "A0_VR_A1_VR" 2 214 "0x3ff06"
d G "A3_VR_A2_VR" 2 215 "0xcff0e"
d G "CP1_INVERT" 2 216 "0x0000010"
d G "CP2_INVERT" 2 217 "0x0000020"
d G "VREF_LOW" 2 225 "0xa0"
d G "VREF_HIGH" 2 226 "0x80"
d G "VREF_A2" 2 228 "0x40"
d G "ADC_OFF" 2 236 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 2 237 "0x10000"
d G "ADC_CLOCK_DIV_4" 2 238 "0x4000"
d G "ADC_CLOCK_DIV_8" 2 239 "0x0040"
d G "ADC_CLOCK_DIV_16" 2 240 "0x4040"
d G "ADC_CLOCK_DIV_32" 2 241 "0x0080"
d G "ADC_CLOCK_DIV_64" 2 242 "0x4080"
d G "ADC_CLOCK_INTERNAL" 2 243 "0x00c0" "Internal 2-6us"
d G "NO_ANALOGS" 2 246 "7" "None"
d G "ALL_ANALOG" 2 247 "0" "A0 A1 A2 A3 A5 E0 E1 E2"
d G "AN0_AN1_AN2_AN4_AN5_AN6_AN7_VSS_VREF" 2 248 "1" "A0 A1 A2 A5 E0 E1 E2 VRefh=A3"
d G "AN0_AN1_AN2_AN3_AN4" 2 249 "2" "A0 A1 A2 A3 A5"
d G "AN0_AN1_AN2_AN4_VSS_VREF" 2 250 "3" "A0 A1 A2 A4 VRefh=A3"
d G "AN0_AN1_AN3" 2 251 "4" "A0 A1 A3"
d G "AN0_AN1_VSS_VREF" 2 252 "5" "A0 A1 VRefh=A3"
d G "AN0_AN1_AN4_AN5_AN6_AN7_VREF_VREF" 2 253 "0x08" "A0 A1 A5 E0 E1 E2 VRefh=A3 VRefl=A2"
d G "AN0_AN1_AN2_AN3_AN4_AN5" 2 254 "0x09" "A0 A1 A2 A3 A5 E0"
d G "AN0_AN1_AN2_AN4_AN5_VSS_VREF" 2 255 "0x0A" "A0 A1 A2 A5 E0 VRefh=A3"
d G "AN0_AN1_AN4_AN5_VREF_VREF" 2 256 "0x0B" "A0 A1 A5 E0 VRefh=A3 VRefl=A2"
d G "AN0_AN1_AN4_VREF_VREF" 2 257 "0x0C" "A0 A1 A4 VRefh=A3 VRefl=A2"
d G "AN0_AN1_VREF_VREF" 2 258 "0x0D" "A0 A1 VRefh=A3 VRefl=A2"
d G "AN0" 2 259 "0x0E" "A0"
d G "AN0_VREF_VREF" 2 260 "0x0F" "A0 VRefh=A3 VRefl=A2"
d G "ANALOG_RA3_REF" 2 261 "0x1" "!old only provided for compatibility"
d G "A_ANALOG" 2 262 "0x2" "!old only provided for compatibility"
d G "A_ANALOG_RA3_REF" 2 263 "0x3" "!old only provided for compatibility"
d G "RA0_RA1_RA3_ANALOG" 2 264 "0x4" "!old only provided for compatibility"
d G "RA0_RA1_ANALOG_RA3_REF" 2 265 "0x5" "!old only provided for compatibility"
d G "ANALOG_RA3_RA2_REF" 2 266 "0x8" "!old only provided for compatibility"
d G "ANALOG_NOT_RE1_RE2" 2 267 "0x9" "!old only provided for compatibility"
d G "ANALOG_NOT_RE1_RE2_REF_RA3" 2 268 "0xA" "!old only provided for compatibility"
d G "ANALOG_NOT_RE1_RE2_REF_RA3_RA2" 2 269 "0xB" "!old only provided for compatibility"
d G "A_ANALOG_RA3_RA2_REF" 2 270 "0xC" "!old only provided for compatibility"
d G "RA0_RA1_ANALOG_RA3_RA2_REF" 2 271 "0xD" "!old only provided for compatibility"
d G "RA0_ANALOG" 2 272 "0xE" "!old only provided for compatibility"
d G "RA0_ANALOG_RA3_RA2_REF" 2 273 "0xF" "!old only provided for compatibility"
d G "ADC_START_AND_READ" 2 277 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 2 278 "1"
d G "ADC_READ_ONLY" 2 279 "6"
d G "L_TO_H" 2 291 "0x40"
d G "H_TO_L" 2 292 "0"
d G "GLOBAL" 2 294 "0x0BC0"
d G "INT_RTCC" 2 295 "0x0B20"
d G "INT_RB" 2 296 "0xFF0B08"
d G "INT_EXT" 2 297 "0x0B10"
d G "INT_AD" 2 298 "0x8C40"
d G "INT_TBE" 2 299 "0x8C10"
d G "INT_RDA" 2 300 "0x8C20"
d G "INT_TIMER1" 2 301 "0x8C01"
d G "INT_TIMER2" 2 302 "0x8C02"
d G "INT_CCP1" 2 303 "0x8C04"
d G "INT_CCP2" 2 304 "0x8D01"
d G "INT_SSP" 2 305 "0x8C08"
d G "INT_PSP" 2 306 "0x8C80"
d G "INT_BUSCOL" 2 307 "0x8D08"
d G "INT_EEPROM" 2 308 "0x8D10"
d G "INT_TIMER0" 2 309 "0x0B20"
d G "INT_COMP" 2 310 "0x8D40"
D G "use_portb_kbd" 0 2 ""
V G "lcd" 3 48 "{int1 enable,int1 rs,int1 rw,int1 unused,int4 data}" "#locate lcd = getenv("sfr:PORTD")    // This puts the entire structure over the port"
D G "set_tris_lcd" 3 66 "(x) set_tris_d(x)"
D G "lcd_type" 3 70 "2" "0=5x7, 1=5x10, 2=2 lines"
D G "lcd_line_two" 3 73 "0x40" "LCD RAM address for the second line"
V G "LCD_INIT_STRING" 3 76 "int8[4]"
V G "LCD_WRITE" 3 84 "{int1 enable,int1 rs,int1 rw,int1 unused,int4 data}"
V G "LCD_READ" 3 85 "{int1 enable,int1 rs,int1 rw,int1 unused,int4 data}"
C L "lcd_read_byte" 3 2 1 "FUNCTION"
F G "lcd_read_byte" 3 89 "int8()"
V L "low" 3 90 "int8"
V L "high" 3 90 "int8"
V L "n" 3 108 "int8"
F G "lcd_send_nibble" 3 108 "void(int8 n)"
V L "address" 3 117 "int8"
V L "n" 3 117 "int8"
F G "lcd_send_byte" 3 117 "void(int8 address,int8 n)"
F G "lcd_init" 3 131 "void()"
V L "i" 3 132 "int8"
V L "x" 3 148 "int8"
V L "y" 3 148 "int8"
F G "lcd_gotoxy" 3 148 "void(int8 x,int8 y)"
V L "address" 3 149 "int8"
V L "c" 3 159 "int8"
F G "lcd_putc" 3 159 "void(int8 c)"
V L "x" 3 170 "int8"
V L "y" 3 170 "int8"
F G "lcd_getc" 3 170 "int8(int8 x,int8 y)"
V L "value" 3 171 "int8"
C L "lcd_getc" 3 2 1 "FUNCTION"
D G "set_tris_kbd" 4 45 "(x) set_tris_b(x)"
D G "COL0" 4 66 " (1 << 5)"
D G "COL1" 4 67 " (1 << 6)"
D G "COL2" 4 68 " (1 << 7)"
D G "ROW0" 4 70 " (1 << 1)"
D G "ROW1" 4 71 " (1 << 2)"
D G "ROW2" 4 72 " (1 << 3)"
D G "ROW3" 4 73 " (1 << 4)"
D G "ALL_ROWS" 4 77 " (ROW0|ROW1|ROW2|ROW3)"
D G "ALL_PINS" 4 78 " (ALL_ROWS|COL0|COL1|COL2)"
V G "KEYS" 4 81 "int8[4][3]"
D G "KBD_DEBOUNCE_FACTOR" 4 86 "33" "Set this number to apx n/333 where"
C L "kbd_init" 4 2 2 "FUNCTION"
F G "kbd_init" 4 91 "void()"
F G "kbd_getc" 4 94 "int8()"
V L "kbd_call_count" 4 95 "int8"
V L "kbd_down" 4 96 "int1"
V L "last_key" 4 97 "int8"
V L "col" 4 98 "int8"
V L "kchar" 4 100 "int8"
V L "row" 4 101 "int8"
D G "_STDLIB" 5 12 ""
D G "RAND_MAX" 5 19 "32767" "The value of which is the maximum value"
D G "LONG_POINTERS" 5 24 "1"
T G "div_t" 5 33 "{sint8 quot,sint8 rem}"
T G "ldiv_t" 5 38 "{sint16 quot,sint16 rem}" "(C) Copyright 1996,2003 Custom Computer Services           ////"
D G "_STDDEF" 6 13 ""
D G "ptrdiff_t" 6 18 "unsigned int16"
D G "size_t" 6 21 "unsigned int8"
D G "wchar_t" 6 22 "char"
D G "NULL" 6 23 "0"
D G "offsetof" 6 25 "(s,f) (offsetofbit(s,f)/8)"
C L "atof" 5 43 2 "FUNCTION"
C L "atof" 5 46 1 "*"
C L "atof" 5 46 1 "*"
V L "s" 5 50 "*int8"
F G "atof" 5 50 "float(*int8 s)" "Standard template: float32 atoe(char * s)"
C L "atof" 5 69 1 "*"
C L "atof" 5 69 1 "*"
C L "atof" 5 69 1 "*"
V L "s" 5 74 "*int8"
F G "atoe" 5 74 "float(*int8 s)" "Standard template: signed int  atoi(char * s)"
C L "atoe" 5 76 1 "*"
C L "atoe" 5 76 1 "*"
V L "s" 5 80 "*int8"
F G "atoi" 5 80 "sint8(*int8 s)" "Syntax: signed int32  atoi32(char * s)"
V L "s" 5 88 "*int8"
F G "atoi32" 5 88 "sint32(*int8 s)" "Syntax: char *  itoa(signed int32 num, int8 base, char * s)"
C L "atoi32" 5 76 2 "FUNCTION"
V L "num" 5 109 "sint32"
V L "base" 5 109 "int8"
V L "s" 5 109 "*int8"
F G "itoa" 5 109 "*int8(sint32 num,int8 base,*int8 s)" "Standard template: signed int16  atol(char * s)"
C L "itoa" 5 111 1 "*"
C L "itoa" 5 111 1 "*"
V L "s" 5 115 "*int8"
F G "atol" 5 115 "sint16(*int8 s)" "Standard template: float32 strtod(char * s,char *endptr)"
C L "atol" 5 117 1 "*"
C L "atol" 5 117 1 "*"
C L "atol" 5 117 1 "*"
V L "s" 5 123 "*int8"
V L "endptr" 5 123 "*int8"
F G "strtod" 5 123 "float(*int8 s,*int8 endptr)" "Standart template: float32 strto(char * s,char *endptr)"
C L "strtod" 5 117 2 "FUNCTION"
C L "strtod" 5 126 1 "*"
C L "strtod" 5 126 1 "*"
C L "strtod" 5 126 2 "*"
C L "strtod" 5 139 1 "*"
C L "strtod" 5 139 1 "*"
C L "strtod" 5 139 1 "*"
C L "strtod" 5 139 1 "*"
V L "s" 5 145 "*int8"
V L "endptr" 5 145 "*int8"
V L "base" 5 145 "sint8"
F G "strtol" 5 145 "sint16(*int8 s,*int8 endptr,sint8 base)" "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "strtol" 5 147 1 "*"
C L "strtol" 5 147 1 "*"
C L "strtol" 5 147 1 "*"
C L "strtol" 5 147 1 "*"
V L "s" 5 153 "*int8"
V L "endptr" 5 153 "*int8"
V L "base" 5 153 "sint8"
F G "strtoul" 5 153 "int16(*int8 s,*int8 endptr,sint8 base)" "Pseudo-random sequence generation functions"
C L "strtoul" 5 147 1 "FUNCTION"
C L "strtoul" 5 159 1 "*"
C L "strtoul" 5 159 1 "*"
C L "strtoul" 5 159 1 "*"
C L "strtoul" 5 159 1 "*"
C L "strtoul" 5 159 1 "*"
F G "rand" 5 168 "int16()" "The srand function uses the argument as a seed for a new sequence of"
C L "rand" 5 170 1 "*"
C L "rand" 5 170 1 "*"
C L "rand" 5 170 1 "*"
C L "rand" 5 170 1 "*"
C L "rand" 5 170 1 "*"
C L "rand" 5 170 1 "*"
C L "rand" 5 170 1 "*"
C L "rand" 5 170 1 "*"
C L "rand" 5 170 1 "*"
C L "rand" 5 170 1 "*"
C L "rand" 5 170 1 "*"
C L "rand" 5 170 1 "*"
C L "rand" 5 170 1 "*"
C L "rand" 5 170 1 "*"
C L "rand" 5 170 1 "*"
V L "seed" 5 190 "int32"
F G "srand" 5 190 "void(int32 seed)" "Memory management functions"
C L "srand" 5 170 3 "FUNCTION"
V L "string" 5 204 "*int8"
F G "system" 5 204 "sint8(*int8 string)" "Searching and sorting utilities"
C L "system" 5 170 1 "FUNCTION"
C L "system" 5 210 1 "*"
C L "system" 5 210 1 "*"
C L "system" 5 210 1 "*"
C L "system" 5 210 1 "*"
C L "system" 5 210 1 "*"
C L "system" 5 210 1 "*"
C L "system" 5 210 1 "*"
C L "system" 5 210 1 "*"
C L "system" 5 210 1 "*"
C L "system" 5 210 1 "*"
C L "system" 5 210 4 "*"
C L "system" 5 228 1 "*"
C L "system" 5 228 1 "*"
C L "system" 5 228 1 "*"
C L "system" 5 228 1 "*"
C L "system" 5 228 1 "*"
C L "system" 5 228 1 "*"
C L "system" 5 228 1 "*"
C L "system" 5 228 1 "*"
D G "labs" 5 248 "abs"
V L "numer" 5 250 "sint8"
V L "denom" 5 250 "sint8"
F G "div" 5 250 "div_t(sint8 numer,sint8 denom)"
V L "numer" 5 251 "sint16"
V L "denom" 5 251 "sint16"
F G "ldiv" 5 251 "ldiv_t(sint16 numer,sint16 denom)" "Multibyte character functions"
C L "ldiv" 5 228 4 "FUNCTION"
C L "ldiv" 6 2 7 "FUNCTION"
D G "_STRING" 7 12 ""
C L "ldiv" 6 2 7 "FUNCTION"
D G "_CTYPE" 8 12 ""
D G "islower" 8 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 8 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 8 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 8 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 8 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 8 19 "(x)  ((x)==' ')"
D G "isxdigit" 8 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 8 21 "(x)  ((x)<' ')"
D G "isprint" 8 22 "(x)  ((x)>=' ')"
D G "isgraph" 8 23 "(x)  ((x)>' ')"
D G "ispunct" 8 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "ldiv" 7 19 10 "FUNCTION"
V L "s1" 7 34 "*int8"
V L "s2" 7 34 "*int8"
V L "n" 7 34 "int8"
F G "memmove" 7 35 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "sc1" 7 36 "*int8"
V L "sc2" 7 37 "*int8"
C L "strcopy" 7 19 3 "FUNCTION"
V L "s1" 7 53 "*int8"
V L "s2" 7 53 "*int8"
F G "strcopy" 7 54 "*int8(*int8 s1,*int8 s2)"
V L "s" 7 55 "*int8"
C L "strncpy" 7 19 4 "FUNCTION"
V L "s1" 7 69 "*int8"
V L "s2" 7 69 "*int8"
V L "n" 7 69 "int8"
F G "strncpy" 7 70 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 7 71 "*int8"
C L "strcat" 7 19 3 "FUNCTION"
V L "s1" 7 86 "*int8"
V L "s2" 7 86 "*int8"
F G "strcat" 7 87 "*int8(*int8 s1,*int8 s2)"
V L "s" 7 88 "*int8"
C L "strncat" 7 19 2 "FUNCTION"
V L "s1" 7 104 "*int8"
V L "s2" 7 104 "*int8"
V L "n" 7 104 "int8"
F G "strncat" 7 105 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 7 106 "*int8"
C L "memcmp" 7 19 3 "FUNCTION"
V L "s1" 7 128 "*int8"
V L "s2" 7 128 "*int8"
V L "n" 7 128 "int8"
F G "memcmp" 7 129 "sint8(*int8 s1,*int8 s2,int8 n)"
V L "su1" 7 130 "*int8"
V L "su2" 7 130 "*int8"
C L "strcmp" 7 19 2 "FUNCTION"
V L "s1" 7 142 "*int8"
V L "s2" 7 142 "*int8"
F G "strcmp" 7 143 "sint8(*int8 s1,*int8 s2)"
C L "strcoll" 7 19 2 "FUNCTION"
V L "s1" 7 152 "*int8"
V L "s2" 7 152 "*int8"
F G "strcoll" 7 153 "sint8(*int8 s1,*int8 s2)"
C L "strncmp" 7 19 4 "FUNCTION"
V L "s1" 7 165 "*int8"
V L "s2" 7 165 "*int8"
V L "n" 7 165 "int8"
F G "strncmp" 7 166 "sint8(*int8 s1,*int8 s2,int8 n)"
C L "strxfrm" 7 19 3 "FUNCTION"
V L "s1" 7 177 "*int8"
V L "s2" 7 177 "*int8"
V L "n" 7 177 "int8"
F G "strxfrm" 7 178 "int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 7 179 "*int8"
V L "n1" 7 180 "int8"
C L "memchr" 7 19 3 "FUNCTION"
V L "s" 7 199 "*int8"
V L "c" 7 199 "int8"
V L "n" 7 199 "int8"
F G "memchr" 7 200 "*int8(*int8 s,int8 c,int8 n)"
V L "uc" 7 201 "int8"
V L "su" 7 202 "*int8"
C L "strchr" 7 19 2 "FUNCTION"
V L "s" 7 213 "*int8"
V L "c" 7 213 "int8"
F G "strchr" 7 214 "*int8(*int8 s,int8 c)"
V L "s1" 7 225 "*int8"
V L "s2" 7 225 "*int8"
F G "strcspn" 7 226 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 7 227 "*int8"
V L "sc2" 7 227 "*int8"
C L "strpbrk" 7 19 4 "FUNCTION"
V L "s1" 7 240 "*int8"
V L "s2" 7 240 "*int8"
F G "strpbrk" 7 241 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 7 242 "*int8"
V L "sc2" 7 242 "*int8"
C L "strrchr" 7 19 2 "FUNCTION"
V L "s" 7 255 "*int8"
V L "c" 7 255 "int8"
F G "strrchr" 7 256 "*int8(*int8 s,int8 c)"
V L "p" 7 257 "*int8"
V L "s1" 7 270 "*int8"
V L "s2" 7 270 "*int8"
F G "strspn" 7 271 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 7 272 "*int8"
V L "sc2" 7 272 "*int8"
C L "strstr" 7 19 6 "FUNCTION"
V L "s1" 7 289 "*int8"
V L "s2" 7 289 "*int8"
F G "strstr" 7 290 "*int8(*int8 s1,*int8 s2)"
V L "s" 7 291 "*int8"
V L "t" 7 291 "*int8"
C L "strtok" 7 19 13 "FUNCTION"
V L "s1" 7 328 "*int8"
V L "s2" 7 328 "*int8"
F G "strtok" 7 329 "*int8(*int8 s1,*int8 s2)"
V L "beg" 7 330 "*int8"
V L "end" 7 330 "*int8"
V L "save" 7 331 "*int8"
V L "s" 7 377 "*int8"
F G "strlen" 7 378 "*int8(*int8 s)"
V L "sc" 7 379 "*int8"
C L "stricmp" 7 19 2 "FUNCTION"
V L "s1" 7 388 "*int8"
V L "s2" 7 388 "*int8"
F G "stricmp" 7 389 "sint8(*int8 s1,*int8 s2)"
C L "strlwr" 7 19 3 "FUNCTION"
V L "s" 7 402 "*int8"
F G "strlwr" 7 403 "*int8(*int8 s)"
V L "p" 7 404 "*int8"
V L "numer" 5 273 "sint8"
V L "denom" 5 273 "sint8"
F G "div" 5 274 "div_t(sint8 numer,sint8 denom)"
V L "val" 5 275 "div_t"
V L "numer" 5 281 "sint16"
V L "denom" 5 281 "sint16"
F G "ldiv" 5 282 "ldiv_t(sint16 numer,sint16 denom)"
V L "val" 5 283 "ldiv_t"
V L "s" 5 289 "*int8"
F G "atof" 5 290 "float(*int8 s)"
V L "pow10" 5 291 "float"
V L "result" 5 292 "float"
V L "sign" 5 293 "int8"
V L "c" 5 294 "int8"
V L "ptr" 5 295 "int8"
V L "s" 5 410 "*int8"
F G "atoe" 5 411 "float(*int8 s)"
V L "pow10" 5 412 "float"
V L "result" 5 413 "float"
V L "sign" 5 414 "int8"
V L "expsign" 5 415 "int8"
V L "c" 5 416 "int8"
V L "ptr" 5 417 "int8"
V L "i" 5 418 "int8"
V L "exp" 5 419 "float"
V L "expcnt" 5 420 "int8"
C L "atoe" 5 446 1 "FUNCTION"
V L "s" 5 477 "*int8"
F G "atoi" 5 478 "sint8(*int8 s)"
V L "result" 5 479 "sint8"
V L "sign" 5 480 "int8"
V L "base" 5 480 "int8"
V L "index" 5 480 "int8"
V L "c" 5 481 "int8"
C L "atoi" 5 446 1 "FUNCTION"
C L "atoi" 5 446 1 "FUNCTION"
C L "atoi" 5 446 1 "FUNCTION"
C L "atoi" 5 446 1 "FUNCTION"
C L "atoi" 5 446 1 "FUNCTION"
C L "atoi" 5 446 1 "FUNCTION"
V L "s" 5 546 "*int8"
F G "atol" 5 547 "sint16(*int8 s)"
V L "result" 5 548 "sint16"
V L "sign" 5 549 "int8"
V L "base" 5 549 "int8"
V L "index" 5 549 "int8"
V L "c" 5 550 "int8"
C L "atol" 5 446 1 "FUNCTION"
C L "atol" 5 446 1 "FUNCTION"
C L "atol" 5 446 1 "FUNCTION"
C L "atol" 5 446 1 "FUNCTION"
C L "mult_with10" 5 446 1 "FUNCTION"
V L "num" 5 613 "int32"
F G "mult_with10" 5 614 "sint32(int32 num)"
V L "s" 5 619 "*int8"
F G "atoi32" 5 620 "sint32(*int8 s)"
V L "result" 5 621 "sint32"
V L "sign" 5 622 "int8"
V L "base" 5 622 "int8"
V L "index" 5 622 "int8"
V L "c" 5 623 "int8"
C L "atoi32" 5 446 1 "FUNCTION"
C L "atoi32" 5 446 1 "FUNCTION"
C L "atoi32" 5 446 1 "FUNCTION"
C L "atoi32" 5 446 1 "FUNCTION"
C L "atoi32" 5 446 1 "FUNCTION"
V L "num" 5 818 "sint32"
V L "base" 5 818 "int8"
V L "s" 5 818 "*int8"
F G "itoa" 5 819 "*int8(sint32 num,int8 base,*int8 s)"
V L "temp" 5 820 "int32"
V L "i" 5 821 "int8"
V L "sign" 5 821 "int8"
V L "cnt" 5 821 "int8"
V L "c" 5 822 "int8"
C L "itoa" 5 446 1 "FUNCTION"
C L "itoa" 5 446 1 "FUNCTION"
C L "itoa" 5 446 1 "FUNCTION"
C L "itoa" 5 446 1 "FUNCTION"
C L "itoa" 5 446 1 "FUNCTION"
V L "s" 5 856 "*int8"
V L "endptr" 5 856 "*int8"
F G "strtod" 5 856 "float(*int8 s,*int8 endptr)"
V L "pow10" 5 857 "float"
V L "result" 5 858 "float"
V L "sign" 5 859 "int8"
V L "point" 5 859 "int8"
V L "c" 5 860 "int8"
V L "ptr" 5 861 "int8"
V L "s" 5 1118 "*int8"
V L "endptr" 5 1118 "*int8"
V L "base" 5 1118 "sint8"
F G "strtoul" 5 1119 "int16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 5 1120 "*int8"
V L "s1" 5 1120 "*int8"
V L "sd" 5 1120 "*int8"
V L "x" 5 1121 "int16"
V L "sign" 5 1122 "int8"
V L "digits" 5 1123 "int8[1]"
C L "strtoul" 5 446 1 "FUNCTION"
C L "strtoul" 5 446 1 "FUNCTION"
C L "strtoul" 5 446 1 "FUNCTION"
V L "s" 5 1180 "*int8"
V L "endptr" 5 1180 "*int8"
V L "base" 5 1180 "sint8"
F G "strtol" 5 1181 "sint16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 5 1182 "*int8"
V L "s1" 5 1182 "*int8"
V L "sd" 5 1182 "*int8"
V L "x" 5 1183 "sint16"
V L "sign" 5 1184 "int8"
V L "digits" 5 1185 "int8[1]"
C L "strtol" 5 446 1 "FUNCTION"
C L "strtol" 5 446 1 "FUNCTION"
C L "strtol" 5 446 1 "FUNCTION"
V L "string" 5 1243 "*int8"
F G "system" 5 1244 "sint8(*int8 string)"
V L "s" 5 1248 "*int8"
V L "n" 5 1248 "int8"
F G "mblen" 5 1249 "int8(*int8 s,int8 n)"
V L "pwc" 5 1253 "*int8"
V L "s" 5 1253 "*int8"
V L "n" 5 1253 "int8"
F G "mbtowc" 5 1254 "int8(*int8 pwc,*int8 s,int8 n)"
V L "s" 5 1259 "*int8"
V L "wchar" 5 1259 "int8"
F G "wctomb" 5 1260 "int8(*int8 s,int8 wchar)"
V L "pwcs" 5 1265 "*int8"
V L "s" 5 1265 "*int8"
V L "n" 5 1265 "int8"
F G "mbstowcs" 5 1266 "int8(*int8 pwcs,*int8 s,int8 n)"
V L "s" 5 1271 "*int8"
V L "pwcs" 5 1271 "*int8"
V L "n" 5 1271 "int8"
F G "wcstombs" 5 1272 "int8(*int8 s,*int8 pwcs,int8 n)"
V G "_Randseed" 5 1281 "int32"
F G "rand" 5 1284 "int16()"
V L "seed" 5 1289 "int32"
F G "srand" 5 1290 "void(int32 seed)"
V L "p1" 5 1298 "*int8"
V L "p2" 5 1298 "*int8"
T G "*_Cmpfun" 5 1298 "sint8(*int8 p1,*int8 p2)"
V L "qdata" 5 1300 "*int8"
V L "qitems" 5 1300 "int8"
V L "qsize" 5 1300 "int8"
V L "cmp" 5 1300 "_Cmpfun"
F G "qsort" 5 1300 "void(*int8 qdata,int8 qitems,int8 qsize,_Cmpfun cmp)"
V L "m" 5 1301 "int8"
V L "j" 5 1301 "int8"
V L "i" 5 1301 "int8"
V L "l" 5 1301 "int8"
V L "done" 5 1302 "int1"
V L "t" 5 1303 "int8[16]"
V L "key" 5 1328 "*int8"
V L "base" 5 1328 "*int8"
V L "num" 5 1328 "int8"
V L "width" 5 1328 "int8"
V L "cmp" 5 1328 "_Cmpfun"
F G "bsearch" 5 1329 "*int8(*int8 key,*int8 base,int8 num,int8 width,_Cmpfun cmp)"
V L "p" 5 1330 "*int8"
V L "q" 5 1330 "*int8"
V L "n" 5 1331 "int8"
V L "pivot" 5 1332 "int8"
V L "val" 5 1333 "sint8"
C L "bsearch" 5 446 1 "FUNCTION"
V G "key" 0 6 "int8"
V G "num1" 0 7 "int8"
V G "func" 0 8 "int8"
V G "num2" 0 9 "int8"
V G "c11" 0 10 "int8"
V G "c22" 0 10 "int8"
V G "error" 0 11 "int8"
V L "numb" 0 13 "int8" "displays number on LCD"
F G "disp_num" 0 14 "int8(int8 numb)"
V L "UnitDigit" 0 15 "int8"
C L "disp_num" 0 15 1 "FUNCTION"
V L "TenthDigit" 0 16 "int8"
C L "disp_num" 0 15 1 "FUNCTION"
C L "disp_num" 0 15 1 "FUNCTION"
C L "disp_num" 0 15 1 "FUNCTION"
C L "disp_num" 0 15 1 "FUNCTION"
C L "disp_num" 0 15 1 "FUNCTION"
C L "disp_num" 0 15 1 "FUNCTION"
C L "disp_num" 0 15 1 "FUNCTION"
V L "numb" 0 34 "int8" "displays differet error messages"
F G "DispError" 0 35 "int8(int8 numb)"
C L "DispError" 0 15 1 "FUNCTION"
V L "ch" 0 44 "int8" "convert char into int"
F G "get_num" 0 45 "int8(int8 ch,int8 DispError)"
V L "num" 0 46 "int8"
C L "get_num" 0 15 1 "FUNCTION"
C L "get_num" 0 15 1 "FUNCTION"
V L "chf" 0 66 "int8" "detects the errors in inputted function"
F G "get_func" 0 67 "int8(int8 chf)"
C L "get_func" 0 15 1 "FUNCTION"
C L "get_func" 0 15 1 "FUNCTION"
C L "get_func" 0 15 1 "FUNCTION"
C L "get_func" 0 15 1 "FUNCTION"
F G "MAIN" 0 84 "void()"
V L "key" 0 85 "int8" "Key char for keeping record of pressed key"
V L "num1" 0 86 "int8"
C L "MAIN" 0 15 1 "FUNCTION"
V L "func" 0 87 "int8"
C L "MAIN" 0 15 1 "FUNCTION"
V L "num2" 0 88 "int8"
C L "MAIN" 0 15 1 "FUNCTION"
C L "MAIN" 0 15 1 "FUNCTION"
C L "MAIN" 0 15 1 "FUNCTION"
C L "MAIN" 0 15 1 "FUNCTION"
C L "MAIN" 0 15 1 "FUNCTION"
C L "MAIN" 0 15 1 "FUNCTION"
C L "MAIN" 0 15 1 "FUNCTION"
C L "MAIN" 0 15 1 "FUNCTION"
C L "MAIN" 0 15 1 "FUNCTION"
C L "MAIN" 0 15 1 "FUNCTION"
C L "MAIN" 0 15 1 "FUNCTION"
C L "MAIN" 0 15 1 "FUNCTION"
C L "MAIN" 0 15 1 "FUNCTION"
C L "MAIN" 0 15 1 "FUNCTION"
C L "MAIN" 0 15 1 "FUNCTION"
C L "MAIN" 0 15 1 "FUNCTION"
C L "MAIN" 0 15 1 "FUNCTION"
C L "MAIN" 0 15 1 "FUNCTION"
C L "MAIN" 0 15 1 "FUNCTION"
C L "MAIN" 0 15 1 "FUNCTION"
C L "MAIN" 0 15 1 "FUNCTION"
C L "MAIN" 0 15 1 "FUNCTION"
C L "MAIN" 0 15 1 "FUNCTION"
C L "MAIN" 0 15 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "strcpy" 2 0
F B "memset" 3 0
F B "memcpy" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 4 0
F B "write_program_memory8" 4 0
F B "read_program_memory" 4 0
F B "read_program_memory8" 4 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_d" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_d" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_d" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_d" 0 0
F B "get_tris_e" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 0
F B "setup_adc_ports" 1 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_ccp1" 1 0
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 0
F B "set_pwm2_duty" 1 0
F B "setup_vref" 1 0
F B "setup_psp" 1 0
F B "psp_output_full" 0 0
F B "psp_input_full" 0 0
F B "psp_overflow" 0 0
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
F B "set_uart_speed" 1 3
F B "setup_uart" 1 3
